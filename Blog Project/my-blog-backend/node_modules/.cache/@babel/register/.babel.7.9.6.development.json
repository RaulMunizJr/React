{
  "{\"sourceRoot\":\"/Users/raulmunizjr/Documents/GitHub/React/my-blog-backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/raulmunizjr/Documents/GitHub/React/my-blog-backend\",\"filename\":\"/Users/raulmunizjr/Documents/GitHub/React/my-blog-backend/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/raulmunizjr/Documents/GitHub/React/my-blog-backend\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/raulmunizjr/Documents/GitHub/React/my-blog-backend/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/raulmunizjr/Documents/GitHub/React/my-blog-backend",
      "filename": "/Users/raulmunizjr/Documents/GitHub/React/my-blog-backend/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/raulmunizjr/Documents/GitHub/React/my-blog-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/raulmunizjr/Documents/GitHub/React/my-blog-backend/src/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/raulmunizjr/Documents/GitHub/React/my-blog-backend/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/raulmunizjr/Documents/GitHub/React/my-blog-backend/src/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n{\n  /*\n    To make compatible with ES6\n    npm install --save-dev @babel/core @babel/node @babel/preset-env\n  */\n}\n{\n  /* MONGO DB*/\n}\n{\n  /*\n  const articlesInfo = {\n  \"learn-react\": {\n    upvotes: 0,\n    comments: [],\n  },\n  \"learn-node\": {\n    upvotes: 0,\n    comments: [],\n  },\n  \"my-thoughts-on-resumes\": {\n    upvotes: 0,\n    comments: [],\n  },\n  };\n  */\n}\nvar app = (0, _express[\"default\"])();\n{\n  /* get('endpoint', 'callback') */\n\n  /* callback -> request (contains details about the request received) & response (send response back to who sent request) */\n}\napp.use(_bodyParser[\"default\"].json());\n{\n  /* basic hello endpoints test \n  app.get(\"/hello\", (req, res) => res.send(\"Hello!\"));\n  app.get(\"/hello/:name\", (req, res) => res.send(`Hello ${req.params.name}`));\n  app.post(\"/hello\", (req, res) => res.send(`Hello ${req.body.name}!`));\n  */\n}\n{\n  /* MONGO DB - important to avoid redundancy */\n}\n\nvar withDB = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(operations, res) {\n    var client, db;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _mongodb[\"default\"].connect(\"mongodb://localhost:27017\", {\n              useNewUrlParser: true\n            });\n\n          case 3:\n            client = _context.sent;\n            db = client.db(\"my-blog\");\n            _context.next = 7;\n            return operations(db);\n\n          case 7:\n            client.close();\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: \"Error connecting to db\",\n              error: _context.t0\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n\n  return function withDB(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n{\n  /* MONGO DB */\n}\napp.get(\"/api/articles/:name\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(db) {\n                var articleName, articleInfo;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        articleName = req.params.name;\n                        _context2.next = 3;\n                        return db.collection(\"articles\").findOne({\n                          name: articleName\n                        });\n\n                      case 3:\n                        articleInfo = _context2.sent;\n                        res.status(200).json(articleInfo);\n\n                      case 5:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x5) {\n                return _ref3.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.post(\"/api/articles/:name/upvote\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            withDB( /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(db) {\n                var articleName, articleInfo, updatedArticleInfo;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        articleName = req.params.name;\n                        _context4.next = 3;\n                        return db.collection(\"articles\").findOne({\n                          name: articleName\n                        });\n\n                      case 3:\n                        articleInfo = _context4.sent;\n                        _context4.next = 6;\n                        return db.collection(\"articles\").updateOne({\n                          name: articleName\n                        }, {\n                          $set: {\n                            upvotes: articleInfo.upvotes + 1\n                          }\n                        });\n\n                      case 6:\n                        _context4.next = 8;\n                        return db.collection(\"articles\").findOne({\n                          name: articleName\n                        });\n\n                      case 8:\n                        updatedArticleInfo = _context4.sent;\n                        res.status(200).json(updatedArticleInfo);\n\n                      case 10:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x8) {\n                return _ref5.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x6, _x7) {\n    return _ref4.apply(this, arguments);\n  };\n}());\n{\n  /* \"LOCAL aka faceDB\"\n  articlesInfo[articleName].upvotes += 1;\n  res\n    .status(200)\n    .send(\n      `${articleName} now has ${articlesInfo[articleName].upvotes} upvotes`\n    );\n  */\n}\napp.post(\"/api/articles/:name/add-comment\", function (req, res) {\n  var _req$body = req.body,\n      username = _req$body.username,\n      text = _req$body.text;\n  var articleName = req.params.name;\n  withDB( /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(db) {\n      var articleInfo, updatedArticleInfo;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return db.collection(\"articles\").findOne({\n                name: articleName\n              });\n\n            case 2:\n              articleInfo = _context6.sent;\n              _context6.next = 5;\n              return db.collection(\"articles\").updateOne({\n                name: articleName\n              }, {\n                $set: {\n                  comments: articleInfo.comments.concat({\n                    username: username,\n                    text: text\n                  })\n                }\n              });\n\n            case 5:\n              _context6.next = 7;\n              return db.collection(\"articles\").findOne({\n                name: articleName\n              });\n\n            case 7:\n              updatedArticleInfo = _context6.sent;\n              res.status(200).json(updatedArticleInfo);\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x9) {\n      return _ref6.apply(this, arguments);\n    };\n  }(), res);\n});\napp.listen(8000, function () {\n  return console.log(\"Listening on port 8000\");\n});\n{\n  /* to run server -> npx babel-node src/server.js */\n\n  /* for nodemon -> npx nodemon --exec npx babel-node src/server.js */\n}\n{\n  /* body-parser allows server to extract JSON data sent with request */\n\n  /* npm install --save body-parser */\n\n  /***********************************************************************************/\n\n  /* allows the server to restart automatically when it senses changes have been made*/\n\n  /* npm install --save-dev nodemon */\n\n  /***********************************************************************************/\n\n  /* install mongodb package into express server (make sure you're in backend dir)*/\n\n  /* npm install --save mongodb */\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsIndpdGhEQiIsIm9wZXJhdGlvbnMiLCJyZXMiLCJNb25nb0NsaWVudCIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJjbGllbnQiLCJkYiIsImNsb3NlIiwic3RhdHVzIiwibWVzc2FnZSIsImVycm9yIiwiZ2V0IiwicmVxIiwiYXJ0aWNsZU5hbWUiLCJwYXJhbXMiLCJuYW1lIiwiY29sbGVjdGlvbiIsImZpbmRPbmUiLCJhcnRpY2xlSW5mbyIsInBvc3QiLCJ1cGRhdGVPbmUiLCIkc2V0IiwidXB2b3RlcyIsInVwZGF0ZWRBcnRpY2xlSW5mbyIsImJvZHkiLCJ1c2VybmFtZSIsInRleHQiLCJjb21tZW50cyIsImNvbmNhdCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBT0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBVEE7QUFDRTs7OztBQUlEO0FBS0Q7QUFDRTtBQUNEO0FBQ0Q7QUFDRTs7Ozs7Ozs7Ozs7Ozs7OztBQWdCRDtBQUNELElBQU1BLEdBQUcsR0FBRywwQkFBWjtBQUNBO0FBQ0U7O0FBQ0E7QUFDRDtBQUVEQSxHQUFHLENBQUNDLEdBQUosQ0FBUUMsdUJBQVdDLElBQVgsRUFBUjtBQUNBO0FBQ0U7Ozs7O0FBS0Q7QUFDRDtBQUNFO0FBQ0Q7O0FBQ0QsSUFBTUMsTUFBTTtBQUFBLHFFQUFHLGlCQUFPQyxVQUFQLEVBQW1CQyxHQUFuQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBRVVDLG9CQUFZQyxPQUFaLENBQW9CLDJCQUFwQixFQUFpRDtBQUNwRUMsY0FBQUEsZUFBZSxFQUFFO0FBRG1ELGFBQWpELENBRlY7O0FBQUE7QUFFTEMsWUFBQUEsTUFGSztBQUtMQyxZQUFBQSxFQUxLLEdBS0FELE1BQU0sQ0FBQ0MsRUFBUCxDQUFVLFNBQVYsQ0FMQTtBQUFBO0FBQUEsbUJBT0xOLFVB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QU47QUFrQkQsQ0F0QkQ7QUF3QkFOLEdBQUcsQ0FBQ2tDLE1BQUosQ0FBVyxJQUFYLEVBQWlCO0FBQUEsU0FBTUMsT0FBTyxDQUFDQyxHQUFSLENBQVksd0JBQVosQ0FBTjtBQUFBLENBQWpCO0FBRUE7QUFDRTs7QUFDQTtBQUNEO0FBRUQ7QUFDRTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTtBQUNEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yYXVsbXVuaXpqci9Eb2N1bWVudHMvR2l0SHViL1JlYWN0L215LWJsb2ctYmFja2VuZC9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsie1xuICAvKlxuICAgIFRvIG1ha2UgY29tcGF0aWJsZSB3aXRoIEVTNlxuICAgIG5wbSBpbnN0YWxsIC0tc2F2ZS1kZXYgQGJhYmVsL2NvcmUgQGJhYmVsL25vZGUgQGJhYmVsL3ByZXNldC1lbnZcbiovXG59XG5cbmltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tIFwiYm9keS1wYXJzZXJcIjtcbmltcG9ydCBNb25nb0NsaWVudCBmcm9tIFwibW9uZ29kYlwiO1xue1xuICAvKiBNT05HTyBEQiovXG59XG57XG4gIC8qXG5jb25zdCBhcnRpY2xlc0luZm8gPSB7XG4gIFwibGVhcm4tcmVhY3RcIjoge1xuICAgIHVwdm90ZXM6IDAsXG4gICAgY29tbWVudHM6IFtdLFxuICB9LFxuICBcImxlYXJuLW5vZGVcIjoge1xuICAgIHVwdm90ZXM6IDAsXG4gICAgY29tbWVudHM6IFtdLFxuICB9LFxuICBcIm15LXRob3VnaHRzLW9uLXJlc3VtZXNcIjoge1xuICAgIHVwdm90ZXM6IDAsXG4gICAgY29tbWVudHM6IFtdLFxuICB9LFxufTtcbiovXG59XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG57XG4gIC8qIGdldCgnZW5kcG9pbnQnLCAnY2FsbGJhY2snKSAqL1xuICAvKiBjYWxsYmFjayAtPiByZXF1ZXN0IChjb250YWlucyBkZXRhaWxzIGFib3V0IHRoZSByZXF1ZXN0IHJlY2VpdmVkKSAmIHJlc3BvbnNlIChzZW5kIHJlc3BvbnNlIGJhY2sgdG8gd2hvIHNlbnQgcmVxdWVzdCkgKi9cbn1cblxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG57XG4gIC8qIGJhc2ljIGhlbGxvIGVuZHBvaW50cyB0ZXN0IFxuYXBwLmdldChcIi9oZWxsb1wiLCAocmVxLCByZXMpID0+IHJlcy5zZW5kKFwiSGVsbG8hXCIpKTtcbmFwcC5nZXQoXCIvaGVsbG8vOm5hbWVcIiwgKHJlcSwgcmVzKSA9PiByZXMuc2VuZChgSGVsbG8gJHtyZXEucGFyYW1zLm5hbWV9YCkpO1xuYXBwLnBvc3QoXCIvaGVsbG9cIiwgKHJlcSwgcmVzKSA9PiByZXMuc2VuZChgSGVsbG8gJHtyZXEuYm9keS5uYW1lfSFgKSk7XG4qL1xufVxue1xuICAvKiBNT05HTyBEQiAtIGltcG9ydGFudCB0byBhdm9pZCByZWR1bmRhbmN5ICovXG59XG5jb25zdCB3aXRoREIgPSBhc3luYyAob3BlcmF0aW9ucywgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgY2xpZW50ID0gYXdhaXQgTW9uZ29DbGllbnQuY29ubmVjdChcIm1vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTdcIiwge1xuICAgICAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLFxuICAgIH0pO1xuICAgIGNvbnN0IGRiID0gY2xpZW50LmRiKFwibXktYmxvZ1wiKTtcblxuICAgIGF3YWl0IG9wZXJhdGlvbnMoZGIpO1xuXG4gICAgY2xpZW50LmNsb3NlKCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiBcIkVycm9yIGNvbm5lY3RpbmcgdG8gZGJcIiwgZXJyb3IgfSk7XG4gIH1cbn07XG5cbntcbiAgLyogTU9OR08gREIgKi9cbn1cbmFwcC5nZXQoXCIvYXBpL2FydGljbGVzLzpuYW1lXCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB3aXRoREIoYXN5bmMgKGRiKSA9PiB7XG4gICAgY29uc3QgYXJ0aWNsZU5hbWUgPSByZXEucGFyYW1zLm5hbWU7XG5cbiAgICBjb25zdCBhcnRpY2xlSW5mbyA9IGF3YWl0IGRiXG4gICAgICAuY29sbGVjdGlvbihcImFydGljbGVzXCIpXG4gICAgICAuZmluZE9uZSh7IG5hbWU6IGFydGljbGVOYW1lIH0pO1xuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKGFydGljbGVJbmZvKTtcbiAgfSwgcmVzKTtcbn0pO1xuXG5hcHAucG9zdChcIi9hcGkvYXJ0aWNsZXMvOm5hbWUvdXB2b3RlXCIsIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICB3aXRoREIoYXN5bmMgKGRiKSA9PiB7XG4gICAgY29uc3QgYXJ0aWNsZU5hbWUgPSByZXEucGFyYW1zLm5hbWU7XG5cbiAgICBjb25zdCBhcnRpY2xlSW5mbyA9IGF3YWl0IGRiXG4gICAgICAuY29sbGVjdGlvbihcImFydGljbGVzXCIpXG4gICAgICAuZmluZE9uZSh7IG5hbWU6IGFydGljbGVOYW1lIH0pO1xuICAgIGF3YWl0IGRiLmNvbGxlY3Rpb24oXCJhcnRpY2xlc1wiKS51cGRhdGVPbmUoXG4gICAgICB7IG5hbWU6IGFydGljbGVOYW1lIH0sXG4gICAgICB7XG4gICAgICAgICRzZXQ6IHtcbiAgICAgICAgICB1cHZvdGVzOiBhcnRpY2xlSW5mby51cHZvdGVzICsgMSxcbiAgICAgICAgfSxcbiAgICAgIH1cbiAgICApO1xuICAgIGNvbnN0IHVwZGF0ZWRBcnRpY2xlSW5mbyA9IGF3YWl0IGRiXG4gICAgICAuY29sbGVjdGlvbihcImFydGljbGVzXCIpXG4gICAgICAuZmluZE9uZSh7IG5hbWU6IGFydGljbGVOYW1lIH0pO1xuXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24odXBkYXRlZEFydGljbGVJbmZvKTtcbiAgfSwgcmVzKTtcbn0pO1xuXG57XG4gIC8qIFwiTE9DQUwgYWthIGZhY2VEQlwiXG4gIGFydGljbGVzSW5mb1thcnRpY2xlTmFtZV0udXB2b3RlcyArPSAxO1xuICByZXNcbiAgICAuc3RhdHVzKDIwMClcbiAgICAuc2VuZChcbiAgICAgIGAke2FydGljbGVOYW1lfSBub3cgaGFzICR7YXJ0aWNsZXNJbmZvW2FydGljbGVOYW1lXS51cHZvdGVzfSB1cHZvdGVzYFxuICAgICk7XG4qL1xufVxuXG5hcHAucG9zdChcIi9hcGkvYXJ0aWNsZXMvOm5hbWUvYWRkLWNvbW1lbnRcIiwgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHsgdXNlcm5hbWUsIHRleHQgfSA9IHJlcS5ib2R5O1xuICBjb25zdCBhcnRpY2xlTmFtZSA9IHJlcS5wYXJhbXMubmFtZTtcblxuICB3aXRoREIoYXN5bmMgKGRiKSA9PiB7XG4gICAgY29uc3QgYXJ0aWNsZUluZm8gPSBhd2FpdCBkYlxuICAgICAgLmNvbGxlY3Rpb24oXCJhcnRpY2xlc1wiKVxuICAgICAgLmZpbmRPbmUoeyBuYW1lOiBhcnRpY2xlTmFtZSB9KTtcbiAgICBhd2FpdCBkYi5jb2xsZWN0aW9uKFwiYXJ0aWNsZXNcIikudXBkYXRlT25lKFxuICAgICAgeyBuYW1lOiBhcnRpY2xlTmFtZSB9LFxuICAgICAge1xuICAgICAgICAkc2V0OiB7XG4gICAgICAgICAgY29tbWVudHM6IGFydGljbGVJbmZvLmNvbW1lbnRzLmNvbmNhdCh7IHVzZXJuYW1lLCB0ZXh0IH0pLFxuICAgICAgICB9LFxuICAgICAgfVxuICAgICk7XG4gICAgY29uc3QgdXBkYXRlZEFydGljbGVJbmZvID0gYXdhaXQgZGJcbiAgICAgIC5jb2xsZWN0aW9uKFwiYXJ0aWNsZXNcIilcbiAgICAgIC5maW5kT25lKHsgbmFtZTogYXJ0aWNsZU5hbWUgfSk7XG5cbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih1cGRhdGVkQXJ0aWNsZUluZm8pO1xuICB9LCByZXMpO1xufSk7XG5cbmFwcC5saXN0ZW4oODAwMCwgKCkgPT4gY29uc29sZS5sb2coXCJMaXN0ZW5pbmcgb24gcG9ydCA4MDAwXCIpKTtcblxue1xuICAvKiB0byBydW4gc2VydmVyIC0+IG5weCBiYWJlbC1ub2RlIHNyYy9zZXJ2ZXIuanMgKi9cbiAgLyogZm9yIG5vZGVtb24gLT4gbnB4IG5vZGVtb24gLS1leGVjIG5weCBiYWJlbC1ub2RlIHNyYy9zZXJ2ZXIuanMgKi9cbn1cblxue1xuICAvKiBib2R5LXBhcnNlciBhbGxvd3Mgc2VydmVyIHRvIGV4dHJhY3QgSlNPTiBkYXRhIHNlbnQgd2l0aCByZXF1ZXN0ICovXG4gIC8qIG5wbSBpbnN0YWxsIC0tc2F2ZSBib2R5LXBhcnNlciAqL1xuICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4gIC8qIGFsbG93cyB0aGUgc2VydmVyIHRvIHJlc3RhcnQgYXV0b21hdGljYWxseSB3aGVuIGl0IHNlbnNlcyBjaGFuZ2VzIGhhdmUgYmVlbiBtYWRlKi9cbiAgLyogbnBtIGluc3RhbGwgLS1zYXZlLWRldiBub2RlbW9uICovXG4gIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAgLyogaW5zdGFsbCBtb25nb2RiIHBhY2thZ2UgaW50byBleHByZXNzIHNlcnZlciAobWFrZSBzdXJlIHlvdSdyZSBpbiBiYWNrZW5kIGRpcikqL1xuICAvKiBucG0gaW5zdGFsbCAtLXNhdmUgbW9uZ29kYiAqL1xufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "json",
        "withDB",
        "operations",
        "res",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "client",
        "db",
        "close",
        "status",
        "message",
        "error",
        "get",
        "req",
        "articleName",
        "params",
        "name",
        "collection",
        "findOne",
        "articleInfo",
        "post",
        "updateOne",
        "$set",
        "upvotes",
        "updatedArticleInfo",
        "body",
        "username",
        "text",
        "comments",
        "concat",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/raulmunizjr/Documents/GitHub/React/my-blog-backend/src/",
      "sourcesContent": [
        "{\n  /*\n    To make compatible with ES6\n    npm install --save-dev @babel/core @babel/node @babel/preset-env\n*/\n}\n\nimport express from \"express\";\nimport bodyParser from \"body-parser\";\nimport MongoClient from \"mongodb\";\n{\n  /* MONGO DB*/\n}\n{\n  /*\nconst articlesInfo = {\n  \"learn-react\": {\n    upvotes: 0,\n    comments: [],\n  },\n  \"learn-node\": {\n    upvotes: 0,\n    comments: [],\n  },\n  \"my-thoughts-on-resumes\": {\n    upvotes: 0,\n    comments: [],\n  },\n};\n*/\n}\nconst app = express();\n{\n  /* get('endpoint', 'callback') */\n  /* callback -> request (contains details about the request received) & response (send response back to who sent request) */\n}\n\napp.use(bodyParser.json());\n{\n  /* basic hello endpoints test \napp.get(\"/hello\", (req, res) => res.send(\"Hello!\"));\napp.get(\"/hello/:name\", (req, res) => res.send(`Hello ${req.params.name}`));\napp.post(\"/hello\", (req, res) => res.send(`Hello ${req.body.name}!`));\n*/\n}\n{\n  /* MONGO DB - important to avoid redundancy */\n}\nconst withDB = async (operations, res) => {\n  try {\n    const client = await MongoClient.connect(\"mongodb://localhost:27017\", {\n      useNewUrlParser: true,\n    });\n    const db = client.db(\"my-blog\");\n\n    await operations(db);\n\n    client.close();\n  } catch (error) {\n    res.status(500).json({ message: \"Error connecting to db\", error });\n  }\n};\n\n{\n  /* MONGO DB */\n}\napp.get(\"/api/articles/:name\", async (req, res) => {\n  withDB(async (db) => {\n    const articleName = req.params.name;\n\n    const articleInfo = await db\n      .collection(\"articles\")\n      .findOne({ name: articleName });\n    res.status(200).json(articleInfo);\n  }, res);\n});\n\napp.post(\"/api/articles/:name/upvote\", async (req, res) => {\n  withDB(async (db) => {\n    const articleName = req.params.name;\n\n    const articleInfo = await db\n      .collection(\"articles\")\n      .findOne({ name: articleName });\n    await db.collection(\"articles\").updateOne(\n      { name: articleName },\n      {\n        $set: {\n          upvotes: articleInfo.upvotes + 1,\n        },\n      }\n    );\n    const updatedArticleInfo = await db\n      .collection(\"articles\")\n      .findOne({ name: articleName });\n\n    res.status(200).json(updatedArticleInfo);\n  }, res);\n});\n\n{\n  /* \"LOCAL aka faceDB\"\n  articlesInfo[articleName].upvotes += 1;\n  res\n    .status(200)\n    .send(\n      `${articleName} now has ${articlesInfo[articleName].upvotes} upvotes`\n    );\n*/\n}\n\napp.post(\"/api/articles/:name/add-comment\", (req, res) => {\n  const { username, text } = req.body;\n  const articleName = req.params.name;\n\n  withDB(async (db) => {\n    const articleInfo = await db\n      .collection(\"articles\")\n      .findOne({ name: articleName });\n    await db.collection(\"articles\").updateOne(\n      { name: articleName },\n      {\n        $set: {\n          comments: articleInfo.comments.concat({ username, text }),\n        },\n      }\n    );\n    const updatedArticleInfo = await db\n      .collection(\"articles\")\n      .findOne({ name: articleName });\n\n    res.status(200).json(updatedArticleInfo);\n  }, res);\n});\n\napp.listen(8000, () => console.log(\"Listening on port 8000\"));\n\n{\n  /* to run server -> npx babel-node src/server.js */\n  /* for nodemon -> npx nodemon --exec npx babel-node src/server.js */\n}\n\n{\n  /* body-parser allows server to extract JSON data sent with request */\n  /* npm install --save body-parser */\n  /***********************************************************************************/\n  /* allows the server to restart automatically when it senses changes have been made*/\n  /* npm install --save-dev nodemon */\n  /***********************************************************************************/\n  /* install mongodb package into express server (make sure you're in backend dir)*/\n  /* npm install --save mongodb */\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1590455306714
  }
}